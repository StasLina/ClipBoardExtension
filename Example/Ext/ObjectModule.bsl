Перем ЮнитТест, Ожидается;

#Область НаборТестов

Процедура ЗаполнитьНаборТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	Ожидается = ЮнитТестирование;
	
	ЮнитТест.ДобавитьТест("Тест_ИнициализацияБиблиотеки", "Инициализация библиотеки");
	ЮнитТест.ДобавитьТест("Тест_СвойстваУправлениеОкнами", "Свойства WindowsControl");
	ЮнитТест.ДобавитьТест("Тест_МетодыУправлениеОкнами", "Методы WindowsControl");
	ЮнитТест.ДобавитьТест("Тест_ПолучениеСнимкаЭкрана", "Получение снимка экрана");
	
КонецПроцедуры

Процедура Тест_ИнициализацияБиблиотеки() Экспорт
	
	ИдКомпоненты = "VanessaExt";
	МакетКомпоненты = ПолучитьМакет(ИдКомпоненты);
	АдресКомпоненты = ПоместитьВоВременноеХранилище(МакетКомпоненты);
	
	Ожидается.Тест("Подключение бибилиотеки компонент");
	Подключено = ПодключитьВнешнююКомпоненту(АдресКомпоненты, ИдКомпоненты, ТипВнешнейКомпоненты.Native);
	Ожидается.Что(Подключено).ЕстьИстина();
	
	ИменаКомпонент = Новый Структура("WindowsControl,ProcessControl,ClipboardControl,GitFor1C");
	Для каждого КлючЗначение из ИменаКомпонент Цикл
		Ожидается.Тест("Создание объкта: " + КлючЗначение.Ключ);
		ИмяКомпоненты = "AddIn." + ИдКомпоненты + "." + КлючЗначение.Ключ;
		Ожидается.Что(Новый(ИмяКомпоненты)).ИмеетТип(ИмяКомпоненты);
	КонецЦикла;
	
КонецПроцедуры

Процедура Тест_СвойстваУправлениеОкнами() Экспорт
	
	ВК = Новый("AddIn.VanessaExt.WindowsControl");
	
	Ожидается.Тест().Что(ВК).Получить("Version").ИмеетТип("Строка");
	Ожидается.Тест().Что(ВК).Получить("Версия").ИмеетТип("Строка");
	Ожидается.Тест().Что(ВК).Получить("ВЕРСИЯ").ИмеетТип("Строка");
	Ожидается.Тест().Что(ВК).Получить("ProcessId").Больше(0);
	Ожидается.Тест().Что(ВК).Получить("ИдентификаторПроцесса").Больше(0);
	Ожидается.Тест().Что(ВК).Получить("АктивноеОкно").Больше(0);
	
	ИмяСвойства = "ТекстБуфераОбмена";
	ТестовыеДанные = "Текст примера для проверки";
	Ожидается.Тест().Что(ВК).Установить(ИмяСвойства, ТестовыеДанные);
	Ожидается.Тест().Получить(ИмяСвойства).Равно(ТестовыеДанные);
	
	ИмяСвойства = "КартинкаБуфераОбмена";
	ТестовыеДанные = ПолучитьЛоготип1С();
	Ожидается.Тест().Что(ВК).Установить(ИмяСвойства, ТестовыеДанные);
	Ожидается.Тест().Получить(ИмяСвойства).ЭтоКартинка();
	
	Ожидается.Тест().Что(ВК).Получить("СвойстваЭкрана");
	Ожидается.Тест().Что(ВК).Получить("СписокДисплеев");
	Ожидается.Тест().Что(ВК).Получить("СписокОкон");
	Ожидается.Тест().Что(ВК).Получить("ПозицияКурсора");
	
КонецПроцедуры

Процедура Тест_МетодыУправлениеОкнами() Экспорт
	
	ВК = Новый("AddIn.VanessaExt.WindowsControl");
	
	Ожидается.Тест().Что(ВК).Функц("НайтиКлиентТестирования", 48000);
	Ожидается.Тест().Что(ВК).Функц("ПолучитьСписокПроцессов", Истина);
	Ожидается.Тест().Что(ВК).Функц("ПолучитьСписокДисплеев");
	Ожидается.Тест().Что(ВК).Функц("ПолучитьСвойстваОкна", 0);
	
	ИдентификаторОкна = Ожидается.Тест().Что(ВК).Получить("АктивноеОкно").Значение();
	ИдентификаторПроцесса = Ожидается.Тест().Что(ВК).Получить("ИдентификаторПроцесса").Значение();
	СвойстваОкна = Ожидается.Тест().Что(ВК).Функц("ПолучитьСвойстваОкна", ИдентификаторОкна).ЗначениеJSON();
	Ожидается.Тест("Контроль идентификатора процесса").Что(СвойстваОкна).Получить("ProcessId").Равно(ИдентификаторПроцесса);
	
	ИдентификаторОкна = ВК.АктивноеОкно;
	СвойстваОкна = ВК.ПолучитьСвойстваОкна(0);
	ИдентификаторПроцесса = JSON(СвойстваОкна).ProcessId;
	ЮнитТест.ПроверитьЗначение(СвойстваОкна, "ПолучитьСвойстваОкна(0)");
	ЮнитТест.ПроверитьРавенство(ИдентификаторПроцесса, ВК.ProcessId, "СвойстваОкна.ProcessId = ВК.ProcessId");
	
	СписокПроцессов = ВК.ПолучитьСписокПроцессов(Истина);
	ЮнитТест.ПроверитьЗначение(СписокПроцессов, "ПолучитьСписокПроцессов(Истина)");
	
	СвойстваПроцесса = ВК.ПолучитьСвойстваПроцесса(ИдентификаторПроцесса);
	ЮнитТест.ПроверитьРавенство(JSON(СвойстваПроцесса).ProcessId, ИдентификаторПроцесса, "СвойстваПроцесса.ProcessId = ВК.ProcessId");
	
	ЮнитТест.ПроверитьЗначение(ВК.ПолучитьСписокДисплеев(), "ПолучитьСписокДисплеев()");
	ЮнитТест.ПроверитьЗначение(ВК.ПолучитьСписокДисплеев(ИдентификаторОкна), "ПолучитьСписокДисплеев(hWnd)");
	ЮнитТест.ПроверитьЗначение(ВК.ПолучитьСвойстваДисплея(ИдентификаторОкна), "ПолучитьСвойстваДисплея(hWnd)");
	ЮнитТест.ПроверитьЗначение(ВК.ПолучитьСписокОкон(ИдентификаторПроцесса), "ПолучитьСписокОкон(PID)");
	ЮнитТест.ПроверитьЗначение(ВК.ПолучитьСвойстваОкна(ИдентификаторОкна), "ПолучитьСвойстваОкна(hWnd)");
	
	РазмерыОкна = ВК.ПолучитьРазмерОкна(ИдентификаторОкна);
	ЮнитТест.ПроверитьЗначение(РазмерыОкна, "ПолучитьРазмерОкна(hWnd)");
	Размеры = JSON(РазмерыОкна);
	
	ВК.АктивироватьОкно(ИдентификаторОкна);
	ЮнитТест.ПроверитьЗначение(Неопределено, "АктивироватьОкно(hWnd)");
	
	ВК.РаспахнутьОкно(ИдентификаторОкна);
	ЮнитТест.ПроверитьЗначение(Неопределено, "РаспахнутьОкно(hWnd)");
	
	ВК.РазвернутьОкно(ИдентификаторОкна);
	ЮнитТест.ПроверитьЗначение(Неопределено, "РазвернутьОкно(hWnd)");
	
	ВК.СвернутьОкно(ИдентификаторОкна);
	ЮнитТест.ПроверитьЗначение(Неопределено, "СвернутьОкно(hWnd)");
	
	ВК.Пауза(100);
	ЮнитТест.ПроверитьЗначение(Неопределено, "Пауза(100)");
	
	ВК.РазвернутьОкно(ИдентификаторОкна);
	ЮнитТест.ПроверитьЗначение(Неопределено, "РазвернутьОкно(hWnd)");
	
	ВК.УстановитьРазмерОкна(ИдентификаторОкна, Размеры.Width - 1, Размеры.Height - 1);
	ВК.УстановитьПозициюОкна(ИдентификаторОкна, Размеры.Left + 1, Размеры.Top + 1);
	РазмерыОкна = ВК.ПолучитьРазмерОкна(ИдентификаторОкна);
	НовыеРазмеры = JSON(РазмерыОкна);
	
	РазмерыСовпали = Истина
		И (Размеры.Left + 1 = НовыеРазмеры.Left) 
		И (Размеры.Top + 1 = НовыеРазмеры.Top) 
		И (Размеры.Top + 1 = НовыеРазмеры.Top) 
		И (Размеры.Width - 1 = НовыеРазмеры.Width) 
		И (Размеры.Height - 1 = НовыеРазмеры.Height)
		И (Размеры.Right = НовыеРазмеры.Right) 
		И (Размеры.Bottom = НовыеРазмеры.Bottom);
	
	ЮнитТест.ПроверитьУсловие(РазмерыОкна, РазмерыСовпали, "Размеры и позиция окна");
	
КонецПроцедуры

Процедура Тест_ПолучениеСнимкаЭкрана() Экспорт
	
	ВК = Новый("AddIn.VanessaExt.WindowsControl");
	
	ИдентификаторОкна = Ожидается.Тест().Что(ВК).Получить("АктивноеОкно").Значение();
	Размеры = Ожидается.Тест().Что(ВК).Функц("ПолучитьРазмерОкна", ИдентификаторОкна).ЗначениеJSON();
	
	СнимокОбласти = Ожидается.Тест().Что(ВК).Функц("ПолучитьСнимокОбласти", Размеры.Left, Размеры.Top, Размеры.Width, Размеры.Height).ЭтоКартинка().Значение();
	СнимокЭкрана = Ожидается.Тест().Что(ВК).Функц("ПолучитьСнимокЭкрана").ЭтоКартинка().Значение();
	СнимокОкна = Ожидается.Тест().Что(ВК).Функц("ПолучитьСнимокЭкрана", 1).ЭтоКартинка().Значение();
	
	Ожидается.Тест().Что(ВК).Функц("ПолучитьСнимокОкна", ИдентификаторОкна).ЭтоКартинка();
	Ожидается.Тест().Что(ВК).Функц("ПолучитьСнимокОкна").ЭтоКартинка();
	
	Координаты = Ожидается.Тест().Что(ВК).Функц("НайтиФрагмент", СнимокЭкрана, СнимокОбласти).ЗначениеJSON();
	Ожидается.Тест("Фрагмент найден на картинке").Что(Координаты).Получить("Match").Больше(0.9);
	Координаты = Ожидается.Тест().Что(ВК).Функц("НайтиНаЭкране", СнимокОбласти).ЗначениеJSON();
	Ожидается.Тест("Фрагмент найден на экране").Что(Координаты).Получить("Match").Больше(0.9);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедуры

&НаСервере
Функция JSON(ТекстJSON)
	
	Если ПустаяСтрока(ТекстJSON) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПоляДаты = Новый Массив;
	ПоляДаты.Добавить("CreationDate");
	ПоляДаты.Добавить("date");
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(ТекстJSON);
	Возврат ПрочитатьJSON(ЧтениеJSON, , ПоляДаты);
	
КонецФункции

&НаСервере
Функция ПолучитьЛоготип1С()
	
	ФайлРесурса = "v8res://mngbase/About.lf";
	ВременныйФайл = ПолучитьИмяВременногоФайла();
	КопироватьФайл(ФайлРесурса, ВременныйФайл);
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ВременныйФайл);
	УдалитьФайлы(ВременныйФайл);
	
	Стр = ТекстовыйДокумент.ПолучитьТекст();
	НачПоз = СтрНайти(Стр, "{#base64:");
	КонПоз = СтрНайти(Стр, "}", , НачПоз);
	Стр = Сред(Стр, НачПоз + 9, КонПоз - НачПоз - 9);
	ДвоичныеДанные = Base64Значение(Стр);
	
	Картинка = Новый Картинка(ДвоичныеДанные);
	Соответствие = Новый Соответствие;
	Соответствие.Вставить("screenDensity", "xdpi");
	Возврат Картинка.ПолучитьДвоичныеДанные(Ложь, Соответствие);
	
КонецФункции

#КонецОбласти